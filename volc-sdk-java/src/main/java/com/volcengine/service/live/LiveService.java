
// Code generated by protoc-gen-volcengine-sdk
// source: live/service/service_live.proto
// DO NOT EDIT!

package com.volcengine.service.live;

import com.volcengine.model.live.request.*;
import com.volcengine.model.live.response.*;

/**
 * The interface Vod service.
 */
public interface LiveService extends com.volcengine.service.IBaseService {



	/**
	 * @param listCommonTransPresetDetailRequest
	 * @return ListCommonTransPresetDetailResponse
	 * @throws Exception
	 */
	ListCommonTransPresetDetailResponse listCommonTransPresetDetail(ListCommonTransPresetDetailRequest listCommonTransPresetDetailRequest) throws Exception;

	/**
	 * @param updateCallbackRequest
	 * @return UpdateCallbackResponse
	 * @throws Exception
	 */
	UpdateCallbackResponse updateCallback(UpdateCallbackRequest updateCallbackRequest) throws Exception;

	/**
	 * @param describeCallbackRequest
	 * @return DescribeCallbackResponse
	 * @throws Exception
	 */
	DescribeCallbackResponse describeCallback(DescribeCallbackRequest describeCallbackRequest) throws Exception;

	/**
	 * @param deleteCallbackRequest
	 * @return
	 * @throws Exception
	 */
	DeleteCallbackRespose deleteCallback(DeleteCallbackRequest deleteCallbackRequest) throws Exception;

	/**
	 * @param createDomainRequest
	 * @return
	 * @throws Exception
	 */
	CreateDomainResponse createDomain(CreateDomainRequest createDomainRequest) throws Exception;

	/**
	 * @param deleteDomainRequest
	 * @return
	 * @throws Exception
	 */
	DeleteDomainResponse deleteDomain(DeleteDomainRequest deleteDomainRequest) throws Exception;

	/**
	 * @param listDomainDetailRequest
	 * @return
	 * @throws Exception
	 */
	ListDomainDetailResponse listDomainDetail(ListDomainDetailRequest listDomainDetailRequest) throws Exception;

	/**
	 * @param describeDomainRequest
	 * @return
	 * @throws Exception
	 */
	DescribeDomainResponse describeDomain(DescribeDomainRequest describeDomainRequest) throws Exception;

	/**
	 * @param enableDomainRequest
	 * @return
	 * @throws Exception
	 */
	EnableDomainResponse enableDomain(EnableDomainRequest enableDomainRequest) throws Exception;

	/**
	 * @param disableDomainRequest
	 * @return
	 * @throws Exception
	 */
	DisableDomainResponse disableDomain(DisableDomainRequest disableDomainRequest) throws Exception;

	/**
	 * @param managerPullPushDomainBindRequest
	 * @return
	 * @throws Exception
	 */
	ManagerPullPushDomainBindResponse managerPullPushDomainBind(ManagerPullPushDomainBindRequest managerPullPushDomainBindRequest) throws Exception;

	/**
	 * @param updateAuthKeyRequest
	 * @return
	 * @throws Exception
	 */
	UpdateAuthKeyResponse updateAuthKey(UpdateAuthKeyRequest updateAuthKeyRequest) throws Exception;

	/**
	 * @param enableAuthRequest
	 * @return
	 * @throws Exception
	 */
//    EnableAuthResponse enableAuth(EnableAuthRequest enableAuthRequest) throws Exception;

	/**
	 * @param disableAuthRequest
	 * @return
	 * @throws Exception
	 */
//    DisableAuthResponse disableAuth(DisableAuthRequest disableAuthRequest) throws Exception;

	/**
	 * @param describeAuthRequest
	 * @return
	 * @throws Exception
	 */
	DescribeAuthResponse describeAuth(DescribeAuthRequest describeAuthRequest) throws Exception;

	/**
	 * @param forbidStreamRequest
	 * @return
	 * @throws Exception
	 */
	ForbidStreamResponse forbidStream(ForbidStreamRequest forbidStreamRequest) throws Exception;

	/**
	 * @param resumeStreamRequest
	 * @return
	 * @throws Exception
	 */
	ResumeStreamResponse resumeStream(ResumeStreamRequest resumeStreamRequest) throws Exception;

	/**
	 * @param listCertRequest
	 * @return
	 * @throws Exception
	 */
	ListCertResponse listCert(ListCertRequest listCertRequest) throws Exception;

	/**
	 * @param createCertRequest
	 * @return
	 * @throws Exception
	 */
	CreateCertResponse createCert(CreateCertRequest createCertRequest) throws Exception;

	/**
	 * @param describeCertDetailSecretRequest
	 * @return
	 * @throws Exception
	 */
//    DescribeCertDetailSecretResponse describeCertDetailSecret(DescribeCertDetailSecretRequest describeCertDetailSecretRequest) throws Exception;

	/**
	 * @param updateCertRequest
	 * @return
	 * @throws Exception
	 */
	UpdateCertResponse updateCert(UpdateCertRequest updateCertRequest) throws Exception;

	/**
	 * @param bindCertRequest
	 * @return
	 * @throws Exception
	 */
	BindCertResponse bindCert(BindCertRequest bindCertRequest) throws Exception;

	/**
	 * @param unbindCertRequest
	 * @return
	 * @throws Exception
	 */
	UnbindCertResponse unbindCert(UnbindCertRequest unbindCertRequest) throws Exception;

	/**
	 * @param deleteCertRequest
	 * @return
	 * @throws Exception
	 */
	DeleteCertResponse deleteCert(DeleteCertRequest deleteCertRequest) throws Exception;

	/**
	 * @param updateRefererRequest
	 * @return
	 * @throws Exception
	 */
	UpdateRefererResponse updateReferer(UpdateRefererRequest updateRefererRequest) throws Exception;

	/**
	 * @param deleteRefererRequest
	 * @return
	 * @throws Exception
	 */
	DeleteRefererResponse deleteReferer(DeleteRefererRequest deleteRefererRequest) throws Exception;

	/**
	 * @param describeRefererRequest
	 * @return
	 * @throws Exception
	 */
	DescribeRefererResponse describeReferer(DescribeRefererRequest describeRefererRequest) throws Exception;

	/**
	 * @param createRecordPresetRequest
	 * @return
	 * @throws Exception
	 */
	CreateRecordPresetResponse createRecordPreset(CreateRecordPresetRequest createRecordPresetRequest) throws Exception;

	/**
	 * @param updateRecordPresetRequest
	 * @return
	 * @throws Exception
	 */
	UpdateRecordPresetResponse updateRecordPreset(UpdateRecordPresetRequest updateRecordPresetRequest) throws Exception;

	/**
	 * @param deleteRecordPresetRequest
	 * @return
	 * @throws Exception
	 */
	DeleteRecordPresetResponse deleteRecordPreset(DeleteRecordPresetRequest deleteRecordPresetRequest) throws Exception;

	/**
	 * @param listVhostRecordPresetRequest
	 * @return
	 * @throws Exception
	 */
	ListVhostRecordPresetResponse listVhostRecordPreset(ListVhostRecordPresetRequest listVhostRecordPresetRequest) throws Exception;

	/**
	 * @param createTranscodePresetRequest
	 * @return
	 * @throws Exception
	 */
	CreateTranscodePresetResponse createTranscodePreset(CreateTranscodePresetRequest createTranscodePresetRequest) throws Exception;

	/**
	 * @param updateTranscodePresetRequest
	 * @return
	 * @throws Exception
	 */
	UpdateTranscodePresetResponse updateTranscodePreset(UpdateTranscodePresetRequest updateTranscodePresetRequest) throws Exception;

	/**
	 * @param deleteTranscodePresetRequest
	 * @return
	 * @throws Exception
	 */
	DeleteTranscodePresetResponse deleteTranscodePreset(DeleteTranscodePresetRequest deleteTranscodePresetRequest) throws Exception;

	/**
	 *
	 * @param listVhostTransCodePresetRequest
	 * @return
	 * @throws Exception
	 */
	ListVhostTransCodePresetResponse listVhostTransCodePreset(ListVhostTransCodePresetRequest listVhostTransCodePresetRequest) throws Exception;

	/**
	 * @param createSnapshotPresetRequest
	 * @return
	 * @throws Exception
	 */
	CreateSnapshotPresetResponse createSnapshotPreset(CreateSnapshotPresetRequest createSnapshotPresetRequest) throws Exception;

	/**
	 * @param updateSnapshotPresetRequest
	 * @return
	 * @throws Exception
	 */
	UpdateSnapshotPresetResponse updateSnapshotPreset(UpdateSnapshotPresetRequest updateSnapshotPresetRequest) throws Exception;

	/**
	 * @param deleteSnapshotPresetRequest
	 * @return
	 * @throws Exception
	 */
	DeleteSnapshotPresetResponse deleteSnapshotPreset(DeleteSnapshotPresetRequest deleteSnapshotPresetRequest) throws Exception;

	/**
	 * @param listVhostSnapshotPresetRequest
	 * @return
	 * @throws Exception
	 */
	ListVhostSnapshotPresetResponse listVhostSnapshotPreset(ListVhostSnapshotPresetRequest listVhostSnapshotPresetRequest) throws Exception;

	/**
	 *
	 * @param describeLiveBandwidthDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeLiveBandwidthDataResponse describeLiveBandwidthData(DescribeLiveBandwidthDataRequest describeLiveBandwidthDataRequest) throws Exception;

	/**
	 *
	 * @param describeLiveTrafficDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeLiveTrafficDataResponse describeLiveTrafficData(DescribeLiveTrafficDataRequest describeLiveTrafficDataRequest) throws Exception;

	/**
	 *
	 * @param describeLiveP95PeakBandwidthDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeLiveP95PeakBandwidthDataResponse describeLiveP95PeakBandwidthData(DescribeLiveP95PeakBandwidthDataRequest describeLiveP95PeakBandwidthDataRequest) throws Exception;

	/**
	 *
	 * @param describeTranscodeDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeTranscodeDataResponse describeTranscodeData(DescribeTranscodeDataRequest describeTranscodeDataRequest) throws Exception;

	/**
	 *
	 * @param describeSnapshotDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeSnapshotDataResponse describeSnapshotData(DescribeSnapshotDataRequest describeSnapshotDataRequest) throws Exception;

	/**
	 *
	 * @param describeRecordDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeRecordDataResponse describeRecordData(DescribeRecordDataRequest describeRecordDataRequest) throws Exception;

	/**
	 *
	 * @param describeLiveTimeShiftDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeLiveTimeShiftDataResponse describeLiveTimeShiftData(DescribeLiveTimeShiftDataRequest describeLiveTimeShiftDataRequest) throws Exception;

	/**
	 *
	 * @param describePushStreamMetricsRequest
	 * @return
	 * @throws Exception
	 */
	DescribePushStreamMetricsResponse describePushStreamMetrics(DescribePushStreamMetricsRequest describePushStreamMetricsRequest) throws Exception;

	/**
	 *
	 * @param describeLiveStreamSessionsRequest
	 * @return
	 * @throws Exception
	 */
	DescribeLiveStreamSessionsResponse describeLiveStreamSessions(DescribeLiveStreamSessionsRequest describeLiveStreamSessionsRequest) throws Exception;

	/**
	 *
	 * @param describePlayResponseStatusStatRequest
	 * @return
	 * @throws Exception
	 */
	DescribePlayResponseStatusStatResponse describePlayResponseStatusStat(DescribePlayResponseStatusStatRequest describePlayResponseStatusStatRequest) throws Exception;

	/**
	 *
	 * @param describeLiveDomainLogRequest
	 * @return
	 * @throws Exception
	 */
	DescribeLiveDomainLogResponse describeLiveDomainLog(DescribeLiveDomainLogRequest describeLiveDomainLogRequest) throws Exception;

	/**
	 *
	 * @param describeLiveMetricTrafficDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeLiveMetricTrafficDataResponse describeLiveMetricTrafficData(DescribeLiveMetricTrafficDataRequest describeLiveMetricTrafficDataRequest) throws Exception;

	/**
	 *
	 * @param describeLiveMetricBandwidthDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeLiveMetricBandwidthDataResponse describeLiveMetricBandwidthData(DescribeLiveMetricBandwidthDataRequest describeLiveMetricBandwidthDataRequest) throws Exception;

	/**
	 *
	 * @param describePlayStreamListRequest
	 * @return
	 * @throws Exception
	 */
	DescribePlayStreamListResponse describePlayStreamList(DescribePlayStreamListRequest describePlayStreamListRequest) throws Exception;

	/**
	 *
	 * @param describePullToPushBandwidthDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribePullToPushBandwidthDataResponse describePullToPushBandwidthData(DescribePullToPushBandwidthDataRequest describePullToPushBandwidthDataRequest) throws Exception;

	/**
	 *
	 * @param createSnapshotAuditPresetRequest snapshot audit params
	 * @return
	 * @throws Exception
	 */
	CreateSnapshotAuditPresetResponse createSnapshotAuditPreset(CreateSnapshotAuditPresetRequest createSnapshotAuditPresetRequest) throws Exception;

	/**
	 *
	 * @param updateSnapshotAuditPresetRequest snapshot audit params
	 * @return
	 * @throws Exception
	 */
	UpdateSnapshotAuditPresetResponse updateSnapshotAuditPreset(UpdateSnapshotAuditPresetRequest updateSnapshotAuditPresetRequest) throws Exception;

	/**
	 *
	 * @param deleteSnapshotAuditPresetRequest snapshot audit params
	 * @return
	 * @throws Exception
	 */
	DeleteSnapshotAuditPresetResponse deleteSnapshotAuditPreset(DeleteSnapshotAuditPresetRequest deleteSnapshotAuditPresetRequest) throws Exception;

	/**
	 *
	 * @param listVhostSnapshotAuditPresetRequest snapshot audit params
	 * @return
	 * @throws Exception
	 */
	ListVhostSnapshotAuditPresetResponse listVhostSnapshotAuditPreset(ListVhostSnapshotAuditPresetRequest listVhostSnapshotAuditPresetRequest) throws Exception;

	/**
	 *
	 * @param describeLiveAuditDataRequest
	 * @return
	 * @throws Exception
	 */
	DescribeLiveAuditDataResponse describeLiveAuditData(DescribeLiveAuditDataRequest describeLiveAuditDataRequest) throws Exception;

	/**
     * DescribeCDNSnapshotHistory.
     *
     * @param input com.volcengine.service.live.model.request.DescribeCDNSnapshotHistoryRequest
     * @return com.volcengine.service.live.model.response.DescribeCDNSnapshotHistoryResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DescribeCDNSnapshotHistoryResponse DescribeCDNSnapshotHistory(com.volcengine.service.live.model.request.DescribeCDNSnapshotHistoryRequest input) throws Exception;
	
	/**
     * DescribeRecordTaskFileHistory.
     *
     * @param input com.volcengine.service.live.model.request.DescribeRecordTaskFileHistoryRequest
     * @return com.volcengine.service.live.model.response.DescribeRecordTaskFileHistoryResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DescribeRecordTaskFileHistoryResponse DescribeRecordTaskFileHistory(com.volcengine.service.live.model.request.DescribeRecordTaskFileHistoryRequest input) throws Exception;
	
	/**
     * DescribeLiveStreamInfoByPage.
     *
     * @param input com.volcengine.service.live.model.request.DescribeLiveStreamInfoByPageRequest
     * @return com.volcengine.service.live.model.response.DescribeLiveStreamInfoByPageResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DescribeLiveStreamInfoByPageResponse DescribeLiveStreamInfoByPage(com.volcengine.service.live.model.request.DescribeLiveStreamInfoByPageRequest input) throws Exception;
	
	/**
     * KillStream.
     *
     * @param input com.volcengine.service.live.model.request.KillStreamRequest
     * @return com.volcengine.service.live.model.response.KillStreamResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.KillStreamResponse KillStream(com.volcengine.service.live.model.request.KillStreamRequest input) throws Exception;

	/**
     * DescribeClosedStreamInfoByPage.
     *
     * @param input com.volcengine.service.live.model.request.DescribeClosedStreamInfoByPageRequest
     * @return com.volcengine.service.live.model.response.DescribeClosedStreamInfoByPageResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DescribeClosedStreamInfoByPageResponse DescribeClosedStreamInfoByPage(com.volcengine.service.live.model.request.DescribeClosedStreamInfoByPageRequest input) throws Exception;
	
	/**
     * DescribeLiveStreamState.
     *
     * @param input com.volcengine.service.live.model.request.DescribeLiveStreamInfoByPageRequest
     * @return com.volcengine.service.live.model.response.DescribeLiveStreamStateResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DescribeLiveStreamStateResponse DescribeLiveStreamState(com.volcengine.service.live.model.request.DescribeLiveStreamInfoByPageRequest input) throws Exception;
	
	/**
     * DescribeForbiddenStreamInfoByPage.
     *
     * @param input com.volcengine.service.live.model.request.DescribeForbiddenStreamInfoByPageRequest
     * @return com.volcengine.service.live.model.response.DescribeForbiddenStreamInfoByPageResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DescribeForbiddenStreamInfoByPageResponse DescribeForbiddenStreamInfoByPage(com.volcengine.service.live.model.request.DescribeForbiddenStreamInfoByPageRequest input) throws Exception;

	/**
     * updateRelaySourceV2.
     *
     * @param input com.volcengine.service.live.model.request.UpdateRelaySourceRequest
     * @return com.volcengine.service.live.model.response.UpdateRelaySourceResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.UpdateRelaySourceResponse updateRelaySourceV2(com.volcengine.service.live.model.request.UpdateRelaySourceRequest input) throws Exception;
	
	/**
     * deleteRelaySourceV2.
     *
     * @param input com.volcengine.service.live.model.request.DeleteRelaySourceRequest
     * @return com.volcengine.service.live.model.response.DeleteRelaySourceResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DeleteRelaySourceResponse deleteRelaySourceV2(com.volcengine.service.live.model.request.DeleteRelaySourceRequest input) throws Exception;
	
	/**
     * describeRelaySourceV2.
     *
     * @param input com.volcengine.service.live.model.request.DescribeRelaySourceRequest
     * @return com.volcengine.service.live.model.response.DescribeRelaySourceResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DescribeRelaySourceResponse describeRelaySourceV2(com.volcengine.service.live.model.request.DescribeRelaySourceRequest input) throws Exception;
	
	/**
     * createVQScoreTask.
     *
     * @param input com.volcengine.service.live.model.request.CreateVQScoreTaskRequest
     * @return com.volcengine.service.live.model.response.CreateVQScoreTaskResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.CreateVQScoreTaskResponse createVQScoreTask(com.volcengine.service.live.model.request.CreateVQScoreTaskRequest input) throws Exception;
	
	/**
     * describeVQScoreTask.
     *
     * @param input com.volcengine.service.live.model.request.DescribeVQScoreTaskRequest
     * @return com.volcengine.service.live.model.response.DescribeVQScoreTaskResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DescribeVQScoreTaskResponse describeVQScoreTask(com.volcengine.service.live.model.request.DescribeVQScoreTaskRequest input) throws Exception;
	
	/**
     * listVQScoreTask.
     *
     * @param input com.volcengine.service.live.model.request.ListVQScoreTaskRequest
     * @return com.volcengine.service.live.model.response.ListVQScoreTaskResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.ListVQScoreTaskResponse listVQScoreTask(com.volcengine.service.live.model.request.ListVQScoreTaskRequest input) throws Exception;
	
	/**
     * generatePlayURL.
     *
     * @param input com.volcengine.service.live.model.request.GeneratePlayURLRequest
     * @return com.volcengine.service.live.model.response.GeneratePlayURLResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.GeneratePlayURLResponse generatePlayURL(com.volcengine.service.live.model.request.GeneratePlayURLRequest input) throws Exception;
	
	/**
     * generatePushURL.
     *
     * @param input com.volcengine.service.live.model.request.GeneratePushURLRequest
     * @return com.volcengine.service.live.model.response.GeneratePushURLResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.GeneratePushURLResponse generatePushURL(com.volcengine.service.live.model.request.GeneratePushURLRequest input) throws Exception;
	
	/**
     * createPullToPushTask.
     *
     * @param input com.volcengine.service.live.model.request.CreatePullToPushTaskRequest
     * @return com.volcengine.service.live.model.response.CreatePullToPushTaskResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.CreatePullToPushTaskResponse createPullToPushTask(com.volcengine.service.live.model.request.CreatePullToPushTaskRequest input) throws Exception;
	
	/**
     * listPullToPushTask.
     *
     * @param input com.volcengine.service.live.model.request.ListPullToPushTaskRequest
     * @return com.volcengine.service.live.model.response.ListPullToPushTaskResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.ListPullToPushTaskResponse listPullToPushTask(com.volcengine.service.live.model.request.ListPullToPushTaskRequest input) throws Exception;
	
	/**
     * updatePullToPushTask.
     *
     * @param input com.volcengine.service.live.model.request.UpdatePullToPushTaskRequest
     * @return com.volcengine.service.live.model.response.UpdatePullToPushTaskResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.UpdatePullToPushTaskResponse updatePullToPushTask(com.volcengine.service.live.model.request.UpdatePullToPushTaskRequest input) throws Exception;
	
	/**
     * stopPullToPushTask.
     *
     * @param input com.volcengine.service.live.model.request.StopPullToPushTaskRequest
     * @return com.volcengine.service.live.model.response.StopPullToPushTaskResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.StopPullToPushTaskResponse stopPullToPushTask(com.volcengine.service.live.model.request.StopPullToPushTaskRequest input) throws Exception;
	
	/**
     * restartPullToPushTask.
     *
     * @param input com.volcengine.service.live.model.request.RestartPullToPushTaskRequest
     * @return com.volcengine.service.live.model.response.RestartPullToPushTaskResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.RestartPullToPushTaskResponse restartPullToPushTask(com.volcengine.service.live.model.request.RestartPullToPushTaskRequest input) throws Exception;
	
	/**
     * deletePullToPushTask.
     *
     * @param input com.volcengine.service.live.model.request.DeletePullToPushTaskRequest
     * @return com.volcengine.service.live.model.response.DeletePullToPushTaskResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DeletePullToPushTaskResponse deletePullToPushTask(com.volcengine.service.live.model.request.DeletePullToPushTaskRequest input) throws Exception;
	
	/**
     * updateDenyConfig.
     *
     * @param input com.volcengine.service.live.model.request.UpdateDenyConfigRequest
     * @return com.volcengine.service.live.model.response.UpdateDenyConfigResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.UpdateDenyConfigResponse updateDenyConfig(com.volcengine.service.live.model.request.UpdateDenyConfigRequest input) throws Exception;
	
	/**
     * describeDenyConfig.
     *
     * @param input com.volcengine.service.live.model.request.DescribeDenyConfigRequest
     * @return com.volcengine.service.live.model.response.DescribeDenyConfigResponse
     * @throws Exception the exception
     */
	com.volcengine.service.live.model.response.DescribeDenyConfigResponse describeDenyConfig(com.volcengine.service.live.model.request.DescribeDenyConfigRequest input) throws Exception;
	
}  // end of service interface
